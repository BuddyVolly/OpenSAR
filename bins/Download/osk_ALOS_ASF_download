#! /bin/bash 

#-------------------------------------------------------------------------------------------	
# 	0.1 Check for right usage & set up basic Script Variables
if [ "$#" != "2" ]; then

	echo -e ""
	echo -e "----------------------------------"
	echo -e " Open Foris SARKit, version ${OSK_VERSION}"
	echo -e " Download ALOS data from an ASF server with an inventory shapefile"
	echo -e " Developed by: Food and Agriculture Organization of the United Nations, Rome"
	echo -e " Author: ${AUTHOR_1}"
	echo -e " Contact: ${CONTACT_1}"
	echo -e "----------------------------------"
	echo -e ""
	echo -e "----------------------------------"
	echo -e " Software dependencies:"
	echo -e "	- aria2"
	echo -e "	- ogrinfo"
	echo -e "----------------------------------"
	echo -e ""
	echo -e " syntax: osk_ALOS_ASF_download <output_folder> <Inventory Shapefile>"
	echo -e ""
	echo -e " input parameters:"
	echo -e " output_folder			(output) folder where the downloaded data will be saved"
	echo -e " Inventory shapefile		(input) shapefile created and maybe edited from osk_ALOS_ASF_inventory script"
	exit 1
else
	echo -e ""
	echo -e "----------------------------------"
	echo -e " Open Foris SARKit, version ${OSK_VERSION}"
	echo -e " Download ALOS data from ASF server with an inventory shapefile"
	echo -e " Developed by: Food and Agriculture Organization of the United Nations, Rome"
	echo -e " Author: ${AUTHOR_1}"
	echo -e " Contact: ${CONTACT_1}"
	echo -e "----------------------------------"
	echo -e ""
	echo -e "----------------------------------"
	echo -e " Software dependencies:"
	echo -e "	- aria2"
	echo -e "	- ogrinfo"
	echo -e "----------------------------------"
	echo -e ""

  	cd $1
   	PROC_DIR=`pwd`
	TMP_DIR=${PROC_DIR}/TMP
	mkdir -p ${TMP_DIR}
fi



#	Credentials
read -r -p "Please type your NASA Earthdata Username:" USERNAME
read -s -p "Please type your NASA Earthdata Password:" PW
echo ""

echo ""
echo "Getting cookie file"
wget --save-cookies ${TMP_DIR}/cookies.txt --post-data 'user_name='$USERNAME'&user_password='${PW}'' --no-check-certificate https://ursa.asfdaac.alaska.edu/cgi-bin/login -o /dev/null -O /dev/null
unset PW

echo "Preparing download"
ogrinfo $2 -al | grep DL_Path | sed 's/  DL_Path (String) = //g' | tail -n +2 > ${TMP_DIR}/download_list
ogrinfo $2 -al | grep Date | sed 's/  Date (Integer) = //g' | tail -n +2 > ${TMP_DIR}/acq_date
ogrinfo $2 -al | grep Mode | sed 's/  Mode (String) = //g' | tail -n +2 > ${TMP_DIR}/mode
ogrinfo $2 -al | grep Track | sed 's/  Track (Integer) = //g' | tail -n +2 > ${TMP_DIR}/track
ogrinfo $2 -al | grep Scene_ID | sed 's/  Scene_ID (String) = //g' | tail -n +2 > ${TMP_DIR}/scene

# counter for info on number of download products
NR=`cat ${TMP_DIR}/download_list | wc -l`
COUNT=1

while read line; do 

	MODE=`cat ${TMP_DIR}/mode | awk "NR==${COUNT}"`
	ACQ_DATE=`cat ${TMP_DIR}/acq_date | awk "NR==${COUNT}"`
	TRACK=`cat ${TMP_DIR}/track | awk "NR==${COUNT}"`
	SCENE=`cat ${TMP_DIR}/scene | awk "NR==${COUNT}"`

	echo " Downloading Product ${COUNT} of ${NR} (Granule: ${SCENE}) "
	mkdir -p ${PROC_DIR}/${MODE} 
	mkdir -p ${PROC_DIR}/${MODE}/${ACQ_DATE}-${TRACK}

	# prepare a loop to avoid uncomplete data downloads		
	i=1
	echo "bla" > ${TMP_DIR}/tmp_error
	# do the loop 
	for(( i=1; i<=2; i++ ));do

		if grep -q "download completed" ${TMP_DIR}/tmp_error;then
			i=3
		else
			i=1
			aria2c --load-cookies="${TMP_DIR}/cookies.txt" --dir=${PROC_DIR}/${MODE}/${ACQ_DATE}-${TRACK} --continue=true "${line}" > ${TMP_DIR}/tmp_error
		fi
	done
	
	COUNT=`expr ${COUNT} + 1`

done < ${TMP_DIR}/download_list

echo "---------------------------------------------"
echo " Download of all scenes succesfully completed"
echo "---------------------------------------------"

