#! /bin/bash

# The MIT License (MIT)
# Copyright (c) 2016 Andreas Vollrath

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#-------------------------------------------------------------------------------------------
# 	0.1 Check for right usage & set up basic Script Variables
if [ "$#" != "2" ]; then

	echo -e "------------------------------------------------------------------"
	echo -e " Open Foris SAR Toolkit, version ${OSK_VERSION}"
	echo -e " Create timeseries stack and multi-temporal statistics from preprocessed single scenes"
	echo -e "------------------------------------------------------------------"
	echo -e ""
	echo -e "----------------------------------"
	echo -e "Software dependencies:"
	echo -e "	- ESA Sentinel Application Platform SNAP"
	echo -e "	- gdal-bin"
	echo -e "----------------------------------"
	echo -e ""
	echo -e " Usage: oft-sar-S1-GRD-bulk-preprocess <input directory> <AOI> <datatype> "
	echo -e ""
	echo -e " input parameters:"
	echo -e " input directory	(input) higher-level directory of the downloaded zip file (i.e. DATA folder created by oft-sar-S1-ASF-download)"
	echo -e " mosaic type :"
	echo -e " 			1: without overlap stats for harmonization "
	echo -e " 			2: calculate overlap stats for harmonization (much longer runtime, but usually better results)"
	echo -e ""
	exit 1
else
	echo -e "------------------------------------------------------------------"
	echo -e " Open Foris SARKit, version ${OSK_VERSION}"
	echo -e " Create timeseries stack and multi-temporal statistics from preprocessed single scenes"
	echo -e "------------------------------------------------------------------"

	# source OST libs
	source ${OPENSARKIT}/lib/helpers_source
  # set up initial script variables
	cd $1
	PROC_DIR=`pwd`
	TMP_DIR=${SAR_TMP:-$PROC_DIR/TMP}
	#TMP_DIR=${PROC_DIR}/TMP
	rm -rf $TMP_DIR
	mkdir -p ${TMP_DIR}

	LOG_DIR=${PROC_DIR}/MT_LOG
	mkdir -p ${LOG_DIR}
fi


NR_OF_TRACKS=`ls -1 -d ${PROC_DIR}/[0-9]* | wc -l`
j=1
# loop thorugh the tracks
for TRACK in `ls -1 -d ${PROC_DIR}/[0-9]*`;do

	# create the list files for mt-metrics
	cd ${TRACK}/MT_metrics

	if [ j == 1 ];then

		ITYPE=$(gdal_datatype 01_Gamma0.VV.mean.tif | tr '[:upper:]' '[:lower:]')

		if [ ITYPE == "byte" ];then
			ITYPE=uint8
		elif [ ITYPE == "float32" ];then
			ITYPE=float
		fi

	fi

	echo $(readlink -f 01_Gamma0.VV.mean.tif) >> ${TMP_DIR}/meanlist
	echo $(readlink -f 02_Gamma0.VV.max.tif) >> ${TMP_DIR}/minlist
	echo $(readlink -f 03_Gamma0.VV.min.tif) >> ${TMP_DIR}/maxlist
	echo $(readlink -f 04_Gamma0.VV.std.tif) >> ${TMP_DIR}/stdlist
	echo $(readlink -f 05_Gamma0.VV.cov.tif) >> ${TMP_DIR}/covlist

	if [ -e 06_Gamma0.VH.mean.tif ]; then
		echo $(readlink -f 06_Gamma0.VH.mean.tif) >> ${TMP_DIR}/vh.meanlist
		echo $(readlink -f 07_Gamma0.VH.max.tif) >> ${TMP_DIR}/vh.minlist
		echo $(readlink -f 08_Gamma0.VH.min.tif) >> ${TMP_DIR}/vh.maxlist
		echo $(readlink -f 09_Gamma0.VH.std.tif) >> ${TMP_DIR}/vh.stdlist
		echo $(readlink -f 10_Gamma0.VH.cov.tif) >> ${TMP_DIR}/vh.covlist
	fi

	#
#	echo $(readlink -f 01_Gamma0.VV.p90.tif) >> ${TMP_DIR}/p90list
#	echo $(readlink -f 02_Gamma0.VV.p10.tif) >> ${TMP_DIR}/p10list
#	echo $(readlink -f 03_Gamma0.VV.pDiff.tif) >> ${TMP_DIR}/pDifflist

	# create the list files for the dates
	cd ${TRACK}

	i=1
	for ACQ in $(ls -1 Timeseries/*VV.*.tif);do
		echo $(readlink -f $ACQ) >> ${TMP_DIR}/${i}_mosaiclist_vv
		i=$(expr $i + 1)
	done

	if [ $(ls -1 Timeseries/*VH*.tif | wc -l) -gt 0 ]; then

		i=1
		for ACQ in $(ls -1 Timeseries/*VH.*.tif);do
			echo $(readlink -f $ACQ) >> ${TMP_DIR}/${i}_mosaiclist_vh
			i=$(expr $i + 1)
		done

	fi

	if [ $2 == 2 ]; then

		echo -ne " Creating data mask for stable areas ..."
		SECONDS=0
		# create a stats layer
		gdal_trace_outline MT_metrics/01_Gamma0.VV.mean.tif -ndv "0" -out-cs ll -ogr-out ${TMP_DIR}/IMG${j}_ndv.shp

		# create a cut stats layer
		if [ ${ITYPE} == "uint16" ];then
			gdal_trace_outline MT_metrics/01_Gamma0.VV.mean.tif -valid-range '35000..65536' -erosion -min-ring-area 25 -out-cs ll -ogr-out ${TMP_DIR}/IMG${j}_stat.shp
			cd ${PROC_DIR}
		elif [ ${ITYPE} == "uint8" ];then
			gdal_trace_outline MT_metrics/01_Gamma0.VV.mean.tif -valid-range '160..255' -erosion -min-ring-area 25 -out-cs ll -ogr-out ${TMP_DIR}/IMG${j}_stat.shp
		elif [ ${ITYPE} == "float" ];then
			gdal_trace_outline MT_metrics/01_Gamma0.VV.mean.tif -ndv '-99999..-18' -erosion -min-ring-area 25 -out-cs ll -ogr-out ${TMP_DIR}/IMG${j}_stat.shp
		fi

		echo "${TMP_DIR}/IMG${j}_ndv.shp" >> ${TMP_DIR}/ndv_list
		echo "${TMP_DIR}/IMG${j}_stat.shp" >> ${TMP_DIR}/stat_list
		duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	fi
j=$(expr $j + 1)
done

mkdir -p $PROC_DIR/MOSAIC/
mkdir -p $PROC_DIR/MOSAIC/MT_metrics
mkdir -p $PROC_DIR/MOSAIC/Timeseries

if [ $2 == 1 ];then

	i=1
	for MOSAIC in $(ls -1 ${TMP_DIR}/*_mosaiclist_vv);do

			SECONDS=0
			echo -ne " Mosaicking the VV polarized timeseries data layers ..."
			otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/${i}_mosaiclist_vv | tr '\n' ' ') \
										-out $PROC_DIR/MOSAIC/Timeseries/${i}_Gamma0.VV.tif ${ITYPE}
			i=$(expr ${i} + 1)
			duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	done

	SECONDS=0
	echo -ne " Mosaicking the multi-temporal metrics layers ..."
	otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/meanlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/01_Gamma0.VV.mean.tif ${ITYPE}
	otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/minlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/02_Gamma0.VV.max.tif ${ITYPE}
	otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/maxlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/03_Gamma0.VV.min.tif ${ITYPE}
	otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/stdlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/04_Gamma0.VV.std.tif ${ITYPE}
	tbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/covlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/05_Gamma0.VV.cov.tif ${ITYPE}
	duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	# percentile
	#otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/p90list | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/01_Gamma0.VV.p90.tif ${ITYPE}
	#otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/p10list | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/02_Gamma0.VV.p10.tif ${ITYPE}
	#otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/pDifflist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/03_Gamma0.VV.pDiff.tif ${ITYPE}

	# IF LOOP FOR VH POLARISATIONS
	if [ $(ls -1 ${TMP_DIR}/*_mosaiclist_vh) -gt 0 ]; then

		# loop thorugh the time-series
		i=1
		for MOSAIC in $(ls -1 ${TMP_DIR}/*_mosaiclist_vh);do

				SECONDS=0
				echo -ne " Mosaicking the VH polarized timeseries data layers ..."
				otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/${i}_mosaiclist_vh | tr '\n' ' ') \
											-out $PROC_DIR/MOSAIC/Timeseries/${i}_Gamma0.VH.tif ${ITYPE}
				i=$(expr ${i} + 1)
				duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"
		done

		# create the timescans
		SECONDS=0
		echo -ne " Mosaicking the multi=temporal metrics layers ..."
		otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/vh.meanlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/06_Gamma0.VH.mean.tif ${ITYPE}
		otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/vh.minlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/07_Gamma0.VH.max.tif ${ITYPE}
		otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/vh.maxlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/08_Gamma0.VH.min.tif ${ITYPE}
		otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/vh.stdlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/09_Gamma0.VH.std.tif ${ITYPE}
		otbcli_Mosaic -ram 8192 -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/vh.covlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/10_Gamma0.VH.cov.tif ${ITYPE}
		duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	fi

elif [ $2 == 2 ];then

	i=1
	for MOSAIC in $(ls -1 ${TMP_DIR}/*_mosaiclist_vv);do

			SECONDS=0
			echo -ne " Mosaicking VV polarized timeseries data layers ..."
			otbcli_Mosaic -ram 8192  -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') \
										-progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/${i}_mosaiclist_vv | tr '\n' ' ') \
										-out $PROC_DIR/MOSAIC/Timeseries/${i}_Gamma0.VV.tif ${ITYPE}
			i=$(expr ${i} + 1)
			duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	done

	SECONDS=0
	echo -ne " Mosaicking Gamma0 VV mean layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/meanlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/01_Gamma0.VV.mean.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"


	SECONDS=0
	echo -ne " Mosaicking Gamma0 VV max layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/maxlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/02_Gamma0.VV.max.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	SECONDS=0
	echo -ne " Mosaicking Gamma0 VV min layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/minlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/02_Gamma0.VV.min.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	SECONDS=0
	echo -ne " Mosaicking Gamma0 VV standard deviation layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/stdlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/04_Gamma0.VV.std.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	SECONDS=0
	echo -ne " Mosaicking Gamma0 VV Coefficient of Variation layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/covlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/05_Gamma0.VV.cov.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"
fi

if [ $(ls -1 ${TMP_DIR}/*_mosaiclist_vh) -gt 0 ]; then

	i=1
	for MOSAIC in $(ls -1 ${TMP_DIR}/*_mosaiclist_vh);do
		SECONDS=0
		echo -ne " Mosaicking VH polarized timeseries data layers ..."
		otbcli_Mosaic -ram 8192  -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') \
									-progress 1 -comp.feather large -harmo.method band -harmo.cost mu -tmpdir ${TMP_DIR} -il $(cat ${TMP_DIR}/${i}_mosaiclist_vh | tr '\n' ' ') \
									-out $PROC_DIR/MOSAIC/Timeseries/${i}_Gamma0.VH.tif ${ITYPE}
		i=$(expr ${i} + 1)
		duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"
	done

	SECONDS=0
	echo -ne " Mosaicking Gamma0 VH mean layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/vh.meanlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/06_Gamma0.VH.mean.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"


	SECONDS=0
	echo -ne " Mosaicking Gamma0 VH max layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/vh.maxlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/07_Gamma0.VH.max.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	SECONDS=0
	echo -ne " Mosaicking Gamma0 VH min layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/vh.minlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/08_Gamma0.VH.min.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	SECONDS=0
	echo -ne " Mosaicking Gamma0 VH standard deviation layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/vh.stdlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/09_Gamma0.VH.std.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	SECONDS=0
	echo -ne " Mosaicking Gamma0 VH Coefficient of Variation layer..."
	otbcli_Mosaic -ram 8192 -vdcut $(cat ${TMP_DIR}/ndv_list | tr '\n' ' ') -vdstats $(cat ${TMP_DIR}/stat_list | tr '\n' ' ') -progress 1 -comp.feather large \
	 							-harmo.method band -harmo.cost mu -il $(cat ${TMP_DIR}/vh.covlist | tr '\n' ' ') -out $PROC_DIR/MOSAIC/MT_metrics/10_Gamma0.VH.cov.tif ${ITYPE}
  duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"

	gdalbuildvrt -separate -srcnodata 0 $PROC_DIR/MOSAIC/MT_metrics/MT_metrics.VV.vrt $PROC_DIR/MOSAIC/MT_metrics/01_Gamma0.VV.mean.tif $PROC_DIR/MOSAIC/MT_metrics/02_Gamma0.VV.max.tif \
																			$PROC_DIR/MOSAIC/MT_metrics/03_Gamma0.VV.min.tif $PROC_DIR/MOSAIC/MT_metrics/04_Gamma0.VV.std.tif $PROC_DIR/MOSAIC/MT_metrics/05_Gamma0.VV.cov.tif \
																			$PROC_DIR/MOSAIC/MT_metrics/06_Gamma0.VH.mean.tif $PROC_DIR/MOSAIC/MT_metrics/07_Gamma0.VH.max.tif $PROC_DIR/MOSAIC/MT_metrics/08_Gamma0.VH.min.tif \
																		 	$PROC_DIR/MOSAIC/MT_metrics/09_Gamma0.VH.std.tif $PROC_DIR/MOSAIC/MT_metrics/10_Gamma0.VH.cov.tif

else

	gdalbuildvrt -separate -srcnodata 0 $PROC_DIR/MOSAIC/MT_metrics/MT_metrics.VV.vrt $PROC_DIR/MOSAIC/MT_metrics/01_Gamma0.VV.mean.tif $PROC_DIR/MOSAIC/MT_metrics/02_Gamma0.VV.max.tif \
																			$PROC_DIR/MOSAIC/MT_metrics/03_Gamma0.VV.min.tif $PROC_DIR/MOSAIC/MT_metrics/04_Gamma0.VV.std.tif $PROC_DIR/MOSAIC/MT_metrics/05_Gamma0.VV.cov.tif

  # creating the vrts
	#gdalbuildvrt -separate -srcnodata 0 $PROC_DIR/MOSAIC/MT_metrics/Percentile.VV.vrt $PROC_DIR/MOSAIC/MT_metrics/01_Gamma0.VV.p90.tif $PROC_DIR/MOSAIC/MT_metrics/02_Gamma0.VV.p10.tif \
	#$PROC_DIR/MOSAIC/MT_metrics/03_Gamma0.VV.pDiff.tif

fi



rm -rf ${TMP_DIR}
