#! /bin/bash

# mosaic Sentinel

#-------------------------------------------------------------------------------------------	
# 	0.1 Check for right usage & set up basic Script Variables
if [ "$#" != "3" ]; then
	
	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Open Foris SARKit, version ${OSK_VERSION}"
	echo -e " Subsetting Sentinel-1 GRD data from ESA Scihub"
	echo -e " Developed by: Food and Agriculture Organization of the United Nations, Rome"
	echo -e " Author: ${AUTHOR_1}"
	echo -e " Contact: ${CONTACT_1}"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Software dependencies:"
	echo -e "	- ESA Sentinel Application Platform SNAP"
	echo -e "	- gdal-bin"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""
	echo -e " osk_S1_GRD_subset <project folder> <AOI> <delete zips>"
	echo -e ""
	exit 1

else
	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Open Foris SARKit, version ${OSK_VERSION}"
	echo -e " Mosaic tool for merging S1 GRD gamma0 data"
	echo -e " Developed by: Food and Agriculture Organization of the United Nations, Rome"
	echo -e " Author: ${AUTHOR_1}"
	echo -e " Contact: ${CONTACT_1}"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Software dependencies:"
	echo -e "	- ESA Sentinel Application Platform SNAP"
	echo -e "	- gdal-bin"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""

	# set up initial script variables	
	AOI=`readlink -f $2`
	
	FILE=`readlink -f $1`
	BASE=`basename ${FILE}`
	PROC_DIR=`dirname ${FILE}`
	TMP1=${PROC_DIR}/TMP/
	rm -rf ${TMP1}	
	mkdir -p ${TMP1}
	export TMP_DIR=${PROC_DIR}/TMP/${BASE}
fi


	#-------------------------------------------------------------------------------------------
	# extract filenames
	SCENE_ID=`echo ${BASE} | rev | cut -c 5- | rev`
	DATE=${SCENE_ID:17:8}
	TRACK=${SCENE_ID:26:3}
	FRAME_START=${SCENE_ID:29:3}
	FRAME_END=${SCENE_ID:45:3}
	ORBIT=${SCENE_ID:49:6}
	MODE=${SCENE_ID:7:3}
	POL_MODE=${SCENE_ID:13:3}
	export SATELLITE="Sentinel-1"
	#-------------------------------------------------------------------------------------------

	echo "----------------------------------------------------------------"
	echo " Processing Scene: 		${SCENE_ID}"
	echo " Satellite/Sensor: 		${SATELLITE}"
	echo " Acquisiton Mode:		${MODE}"
	echo " Polarization Mode:		${POL_MODE}"
	echo " Acquisition Date (YYYYMMDD):	${DATE}"
	echo " Relative Satellite Track: 	${TRACK}"
	echo " Absolute Satellite Track: 	${ORBIT}"
	echo " Start Slice: 			${FRAME_START}"
	echo " End Slice: 			${FRAME_END}"
	echo "----------------------------------------------------------------"

# extract corner coordinates of AOI shapefile
LAYER=`ogrinfo $AOI | grep 1: | awk $'{print $2}'`
X_MIN=`ogrinfo $AOI $LAYER | grep Extent | awk -F '(' $'{print $2}' | awk -F ','  $'{print $1}'`
X_MAX=`ogrinfo $AOI $LAYER | grep Extent | awk -F '(' $'{print $3}' | awk -F ','  $'{print $1}'`
Y_MIN=`ogrinfo $AOI $LAYER | grep Extent | awk -F ',' $'{print $2}' | awk -F ')' $'{print $1}'`
Y_MAX=`ogrinfo $AOI $LAYER | grep Extent | awk -F ',' $'{print $3}' | awk -F ')' $'{print $1}'`
AOI_AREA="POLYGON (($X_MIN$Y_MIN, $X_MIN$Y_MAX, $X_MAX$Y_MAX, $X_MAX$Y_MIN, $X_MIN$Y_MIN ))"
echo $AOI_AREA

echo " Subsetting file $FILE to the extents of $AOI"
bash ${SNAP_EXE} Subset -x -Ssource=${FILE} -t ${PROC_DIR}/${SCENE_ID}"_subset.dim" -PcopyMetadata="true" -PgeoRegion="${AOI_AREA}"


rm -rf ${TMP1}

if [ $3 == 1 ];then 
	rm -f ${FILE}
else
	mkdir -p ${PROC_DIR}/RAW
	mv ${PROC_DIR}/*zip ${PROC_DIR}/RAW
fi

