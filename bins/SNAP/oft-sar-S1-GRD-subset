#! /bin/bash

# The MIT License (MIT)
# Copyright (c) 2016 Andreas Vollrath

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE


#-------------------------------------------------------------------------------------------
# 	0.1 Check for right usage & set up basic Script Variables
if [ "$#" != "4" ]; then

	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Open Foris SAR Toolkit, version ${OSK_VERSION}"
	echo -e " Subsetting Sentinel-1 GRD file to a given area of interest"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Software dependencies:"
	echo -e "	- ESA Sentinel Application Platform SNAP"
	echo -e "	- gdal-bin"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""
	echo -e " synatx: oft-sar-S1-GRD-subset <scene> <AOI> <clean import> <delete zips>"
	echo -e ""
	echo -e " input parameters:"
	echo -e " scene		(input/output) /path/to/scene where the subsetted data will be stored as well"
 	echo -e " AOI		Area of Interest for subsettting"
	echo -e " clean import			do preprocessing steps (i.e. , apply orbit file, calibration, thermal noise removal, Refined Lee Speckle Filter"
	echo -e "			 Available choices:"
	echo -e "			  0 keep original file"
	echo -e "			  1 delete original file"
	echo -e " delete zips			acquisition Mode of PALSAR instrument"
	echo -e "			 Available choices:"
	echo -e "			  0 keep original file"
	echo -e "			  1 delete original file"
	exit 1

else
	echo -e "-----------------------------------------------------------"
	echo -e " Open Foris SAR Toolkit, version ${OSK_VERSION}"
	echo -e " Subsetting Sentinel-1 GRD file to a given area of interest "
	echo -e "-----------------------------------------------------------"

	# set up initial script variables
	AOI=`readlink -f $2`
	FILE=`readlink -f $1`
	BASE=`basename ${FILE}`
	PROC_DIR=`dirname ${FILE}`
	TMP1=${PROC_DIR}/.TMP/
	rm -rf ${TMP1}
	mkdir -p ${TMP1}
	export TMP_DIR=${PROC_DIR}/.TMP/${BASE}
	mkdir -p ${TMP_DIR}
	LOG_DIR=${PROC_DIR}/LOG
	mkdir -p ${LOG_DIR}

	source ${OPENSARKIT}/lib/helpers_source

fi

s1_info ${FILE}

# extract corner coordinates of AOI shapefile
ogr2ogr -f "Esri Shapefile" ${TMP_DIR}/AOI.shp -t_srs EPSG:4326 ${AOI}
LAYER=`ogrinfo ${TMP_DIR}/AOI.shp | grep 1: | awk $'{print $2}'`
X_MIN=`ogrinfo ${TMP_DIR}/AOI.shp $LAYER | grep Extent | awk -F '\(' $'{print $2}' | awk -F '\,'  $'{print $1}'`
X_MAX=`ogrinfo ${TMP_DIR}/AOI.shp $LAYER | grep Extent | awk -F '\(' $'{print $3}' | awk -F '\,'  $'{print $1}'`
Y_MIN=`ogrinfo ${TMP_DIR}/AOI.shp $LAYER | grep Extent | awk -F '\,' $'{print $2}' | awk -F '\)' $'{print $1}'`
Y_MAX=`ogrinfo ${TMP_DIR}/AOI.shp $LAYER | grep Extent | awk -F '\,' $'{print $3}' | awk -F '\)' $'{print $1}'`

echo $XMIN

# create a buffer
X_MIN=`echo $X_MIN - 0.01 | bc`
X_MAX=`echo $X_MAX + 0.01 | bc`
Y_MIN=`echo $Y_MIN - 0.01 | bc`
Y_MAX=`echo $Y_MAX + 0.01 | bc`
AOI_AREA="POLYGON (($X_MIN $Y_MIN, $X_MIN $Y_MAX, $X_MAX $Y_MAX, $X_MAX $Y_MIN, $X_MIN $Y_MIN))"

SECONDS=0
echo " Subsetting file `basename ${FILE}`"
echo " to the extents of: $AOI"

SECONDS=0
echo -ne " Processing ... "
bash ${SNAP_EXE} Subset -x -Ssource=${FILE} -t ${PROC_DIR}/${SCENE_ID}"_subset.dim" -PcopyMetadata="true" -PgeoRegion="${AOI_AREA}" >> ${LOG_DIR}/log_subset 2>&1
duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"
#[ $? -ne 0 ] && return ${ERR_IMPORT}

if [ $3 == 1 ];then

   s1_frame_import ${PROC_DIR}/${SCENE_ID}"_subset.dim" ${PROC_DIR}/${SCENE_ID}"_imported_subset" ${LOG_DIR}
   rm -rf ${PROC_DIR}/${SCENE_ID}"_subset.d"*
fi

rm -rf ${TMP1}

if [ $4 == 1 ];then
	rm -f ${FILE}
else
	mkdir -p ${PROC_DIR}/RAW
	mv ${FILE} ${PROC_DIR}/RAW
fi

rm -rf ${TMP1}
