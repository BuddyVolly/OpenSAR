#! /bin/bash

# mosaic Sentinel

#-------------------------------------------------------------------------------------------	
# 	0.1 Check for right usage & set up basic Script Variables
if [ "$#" != "1" ]; then
	
	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Open Foris SARKit, version ${OSK_VERSION}"
	echo -e " Preprocess Sentinel-1 GRD data from ESA Scihub"
	echo -e " Developed by: Food and Agriculture Organization of the United Nations, Rome"
	echo -e " Author: ${AUTHOR_1}"
	echo -e " Contact: ${CONTACT_1}"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Software dependencies:"
	echo -e "	- gdal-bin"
	echo -e "	- saga"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""
	echo -e " osk_S1_GRD_mosaic <project folder>  "

else

	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Open Foris SARKit, version ${OSK_VERSION}"
	echo -e " Mosaic tool for merging S1 GRD gamma0 data"
	echo -e " Developed by: Food and Agriculture Organization of the United Nations, Rome"
	echo -e " Author: ${AUTHOR_1}"
	echo -e " Contact: ${CONTACT_1}"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""
	echo -e "----------------------------------------------------------------------------------"
	echo -e " Software dependencies:"
	echo -e "	- gdal-bin"
	echo -e "	- saga"
	echo -e "----------------------------------------------------------------------------------"
	echo -e ""

	cd $1
	PROC_DIR=`pwd`
	TMP_DIR=${PROC_DIR}/TMP
	mkdir -p ${TMP_DIR}
	OUT_DIR=${PROC_DIR}/MOSAIC
	mkdir -p ${OUT_DIR}

	source $OPENSARKIT/lib/helpers_source
fi

export PATH="$PATH:~/Programs/OTB/install/bin"
export LD_LIBRARY_PATH="/home/avollrath/Programs/OTB/install/lib/"

function S1_mosaic () {

	if [ -z "$3" ]; then 
	    	echo "Missing arguments. Syntax:"
		echo "  mosaic <Image 1> <Image 2> <Out mosaic>"
	    	return
	fi

	TMP=${TMP_DIR}/TMP_MOS
	mkdir -p ${TMP}
	# nodata layer
	$NODATA_1=`gdal_nodata $1`
	$NODATA_2=`gdal_nodata $2`

	gdal_trace_outline $1 -ndv "$NODATA_1" -out-cs ll -ogr-out ${TMP}/IMG1_ndv.shp
	gdal_trace_outline $2 -ndv "$NODATA_2" -out-cs ll -ogr-out ${TMP}/IMG2_ndv.shp
	# stats layer
	gdal_trace_outline $1 -ndv '-99999..-18' -out-cs ll -ogr-out ${TMP}/IMG1_stat.shp
	gdal_trace_outline $2 -ndv '-99999..-18' -out-cs ll -ogr-out ${TMP}/IMG2_stat.shp

	otbcli_Mosaic -ram 8192 -vdcut ${TMP}/IMG1_ndv.shp ${TMP}/IMG2_ndv.shp -vdstats ${TMP}/IMG1_stat.shp ${TMP}/IMG2_stat.shp -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -il $1 $2 -out ${TMP}/tmp_mosaic.tif
#	otbcli_Mosaic -ram 12800 -vdcut ${TMP}/IMG1_ndv.shp ${TMP}/IMG2_ndv.shp -progress 1 -comp.feather large -harmo.method band -harmo.cost mu -il $1 $2 -out ${TMP}/tmp_mosaic.tif
	gdal_translate -a_nodata 0 ${TMP}/tmp_mosaic.tif $3

	rm -rf ${TMP}
}

for FILE in `ls -1 */*VV.db.sdat`;do

	LONG=`gdalinfo $FILE | grep Origin | awk -F "(" $'{print $2}' | awk -F "," $'{print $1}'`
	echo $LONG $FILE >> ${TMP_DIR}/list_vv
	sort -n ${TMP_DIR}/list_vv > ${TMP_DIR}/list_sort_vv

done	

for FILE in `ls -1 2*/*VH.db.sdat`;do

	LONG=`gdalinfo $FILE | grep Origin | awk -F "(" $'{print $2}' | awk -F "," $'{print $1}'`
	echo $LONG $FILE >> ${TMP_DIR}/list_vh
	sort -n ${TMP_DIR}/list_vh > ${TMP_DIR}/list_sort_vh

done

NR_OF_MOS=`wc -l ${TMP_DIR}/list_sort_vh | awk '{print $1}'`

for ((i=1;i<=$NR_OF_MOS;i++)); do
	echo $i
	
	if [ $i == 1 ];then
		echo "first"

	elif [ $NR_OF_MOS == 2 ];then
		echo "2nd_final"
		IMG1_VV=`cat TMP/list_sort_vv | awk '{print $2}' | awk NR==1`
		IMG2_VV=`cat TMP/list_sort_vv | awk '{print $2}' | awk NR==2`

		S1_mosaic ${IMG1_VV} ${IMG2_VV} ${OUT_DIR}/final_mosaic_vv.tif

		IMG1_VH=`cat TMP/list_sort_vh | awk '{print $2}' | awk NR==1`
		IMG2_VH=`cat TMP/list_sort_vh | awk '{print $2}' | awk NR==2`

		S1_mosaic ${IMG1_VH} ${IMG2_VH} ${OUT_DIR}/final_mosaic_vh.tif
	
	elif [ $i == 2 ];then
		echo "2nd"
		IMG1_VV=`cat TMP/list_sort_vv | awk '{print $2}' | awk NR==1`
		IMG2_VV=`cat TMP/list_sort_vv | awk '{print $2}' | awk NR==2`

		S1_mosaic ${IMG1_VV} ${IMG2_VV} ${TMP_DIR}/mosaic_vv_$i.tif

		IMG1_VH=`cat TMP/list_sort_vh | awk '{print $2}' | awk NR==1`
		IMG2_VH=`cat TMP/list_sort_vh | awk '{print $2}' | awk NR==2`

		S1_mosaic ${IMG1_VH} ${IMG2_VH} ${TMP_DIR}/mosaic_vh_$i.tif

	

	elif [ $i == $NR_OF_MOS ];then

		echo "last"
		j=`expr $i - 1`	
		IMG1_VV=${TMP_DIR}/mosaic_vv_$j.tif
		IMG2_VV=`cat TMP/list_sort_vv | awk '{print $2}' | awk NR==$i`

		S1_mosaic ${IMG1_VV} ${IMG2_VV} ${OUT_DIR}/final_mosaic_vv.tif
		
		IMG1_VH=${TMP_DIR}/mosaic_vh_$j.tif
		IMG2_VH=`cat TMP/list_sort_vh | awk '{print $2}' | awk NR==$i`

		S1_mosaic ${IMG1_VH} ${IMG2_VH} ${OUT_DIR}/final_mosaic_vh.tif

	else
		echo "inter"

		j=`expr $i - 1`	
		IMG1_VV=${TMP_DIR}/mosaic_vv_$j.tif
		IMG2_VV=`cat TMP/list_sort_vv | awk '{print $2}' | awk NR==$i`

		S1_mosaic ${IMG1_VV} ${IMG2_VV} ${TMP_DIR}/mosaic_vv_$i.tif
	
		IMG1_VH=${TMP_DIR}/mosaic_vh_$j.tif
		IMG2_VH=`cat TMP/list_sort_vh | awk '{print $2}' | awk NR==$i`

		S1_mosaic ${IMG1_VH} ${IMG2_VH} ${TMP_DIR}/mosaic_vh_$i.tif
	fi

done
