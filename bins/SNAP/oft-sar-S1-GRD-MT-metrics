#! /bin/bash

# The MIT License (MIT)
# Copyright (c) 2016 Andreas Vollrath

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#-------------------------------------------------------------------------------------------
# 	0.1 Check for right usage & set up basic Script Variables
if [ "$#" != "3" ]; then

	echo -e "------------------------------------------------------------------"
	echo -e " Open Foris SAR Toolkit, version ${OSK_VERSION}"
	echo -e " Create timeseries stack and multi-temporal statistics from preprocessed single scenes"
	echo -e "------------------------------------------------------------------"
	echo -e ""
	echo -e "----------------------------------"
	echo -e "Software dependencies:"
	echo -e "	- ESA Sentinel Application Platform SNAP"
	echo -e "	- gdal-bin"
	echo -e "----------------------------------"
	echo -e ""
	echo -e " Usage: oft-sar-S1-GRD-bulk-preprocess <input directory> <AOI> <datatype> "
	echo -e ""
	echo -e " input parameters:"
	echo -e " input directory	(input) higher-level directory of the downloaded zip file (i.e. DATA folder created by oft-sar-S1-ASF-download)"
	echo -e " AOI 	"
	echo -e " datatype		choose the output datatype"
	echo -e "			  Available choices:"
	echo -e "			  1: unsigned 8-bit integer (UInt8)"
	echo -e "			  2: unsigned 16-bit integer (UInt16)"
	echo -e "			  3: 32-bit float (Float32)"
	echo -e ""
	exit 1
else
	echo -e "------------------------------------------------------------------"
	echo -e " Open Foris SARKit, version ${OSK_VERSION}"
	echo -e " Create timeseries stack and multi-temporal statistics from preprocessed single scenes"
	echo -e "------------------------------------------------------------------"

	# source OST libs
	source ${OPENSARKIT}/lib/helpers_source

	# set up initial script variables
	cd $1
	PROC_DIR=`pwd`
	TMP_DIR=${SAR_TMP:-$PROC_DIR/TMP}
	#TMP_DIR=${PROC_DIR}/TMP
	rm -rf $TMP_DIR
	mkdir -p ${TMP_DIR}

	LOG_DIR=${PROC_DIR}/MT_LOG
	mkdir -p ${LOG_DIR}

	# Datatype Flag
	if [ $3 == 1 ]; then
		ODATATYPE="UInt8"
	elif [ $3 == 2 ]; then
		ODATATYPE="UInt16"
	elif [ $3 == 3 ]; then
		ODATATYPE="Float32"
	fi

	if [ "`echo $2 | grep shp`" ]; then # AOI case
		AOI=`readlink -f $2`
		echo " Selected AOI file: ${AOI}"
		aoi_valid_epsg ${AOI} ${TMP_DIR}/aoi_wgs84.shp ${TMP_DIR}

		if [ -e ${TMP_DIR}/aoi_wgs84.shp ];then
			AOI=${TMP_DIR}/aoi_wgs84.shp
		else
			AOI=${AOI}
		fi

	else # country case
	  COUNTRY=`echo "SELECT name FROM countries WHERE \"iso3\" = '$2';" | spatialite ${OST_DB} | head -50`
		SECONDS=0
		echo -ne " Extracting country boundaries for ${COUNTRY} ..." &&
		ogr2ogr -f "Esri Shapefile" ${TMP_DIR}/AOI.shp ${OST_DB} -dsco SPATIALITE=yes -where "\"iso3\" = \"${2}\"" -nln AOI countries > ${LOG_DIR}/log_process 2>&1
		duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"
		AOI=${TMP_DIR}/AOI.shp

		SECONDS=0
		echo -ne " Creating a 0.1 degree buffer (used for final masking) ... " &&
	 	ogr2ogr -f "Esri Shapefile" ${TMP_DIR}/AOI_buffer.shp ${OST_DB} -dsco SPATIALITE=yes -sql "select ST_union(ST_buffer(geom,0.1)) from countries where \"iso3\" = \"${2}\""  >> ${LOG_DIR}/log_process 2>&1
		duration=$SECONDS && echo -e " done ($(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed)"
		# in case a country is selected we use the buffered AOI
		AOI=${TMP_DIR}/AOI_buffer.shp
	fi

fi

NR_OF_TRACKS=`ls -1 -d ${PROC_DIR}/[0-9]* | wc -l`
j=1
# loop thorugh the tracks
for TRACK in `ls -1 -d ${PROC_DIR}/[0-9]*`;do

	if [ ${NR_OF_TRACKS} -eq 1 ];then
		echo " Info: Processing Track: `basename ${TRACK}`"
	else
		echo " Info: Processing Track: `basename ${TRACK}` ($j/${NR_OF_TRACKS}) "
	fi

	echo " Info: Entering Track: ${TRACK}"
	cd ${TRACK}

	NR_OF_ACQ=`ls -1 -d 20* | wc -l`
	echo " Info: Found ${NR_OF_ACQ} acquisitions for this swath"

	STACK=${PWD}
	LOG_DIR=${PWD}/LOG
	TMP_DIR_TRACK=${PWD}/TMP
	mkdir -p ${LOG_DIR}
	mkdir -p ${TMP_DIR_TRACK}

	FILELIST=$(ls -1 ${PWD}/*/*_RTC.dim | tr '\n' ',' | rev | cut -c 2- | rev)
	if [[ `ls -1 ${PWD}/*/*_RTC.data/*VH*img 2>/dev/null | wc -l` -eq ${NR_OF_ACQ} ]];then
		s1_mt_metrics ${FILELIST} ${AOI} ${STACK} ${ODATATYPE} VH ${TMP_DIR_TRACK} ${LOG_DIR}
	else
		s1_mt_metrics ${FILELIST} ${AOI} ${STACK} ${ODATATYPE} VV ${TMP_DIR_TRACK} ${LOG_DIR}
	fi

	j=`expr $j + 1`
	cd ${PROC_DIR}

done # close track loop

rm -rf ${TMP_DIR}
