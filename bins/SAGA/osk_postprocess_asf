#! /bin/bash

if [ "$#" != "3" ]; then  
	echo -e "*** Postprocessing script ***"
	echo -e "*** OpenSARKit, v.01  ***"
	echo -e ""
	echo -e "usage: osk_w2w_mosaic <mosaic_folder> <DEM> <output_folder>"
	echo -e ""
	echo -e "input parameters:"
	echo -e "mosaic_folder		(input) folder where w2w mosaics are stored"
	echo -e "DEM			(input) Digital Elevation model, that covers the area of the w2w mosaics"
	echo -e "output_folder		(output) folder, where the output stack will be saved"
	echo -e ""
	echo -e "Software components:"
	echo -e "	- gdal-libraries"
	echo -e "	- Sentinel-1 Toolbox"
	exit 1
else
	echo -e "*** Postprocessing script ***"
	echo -e "*** OpenSARKit, v.01  ***"
	echo -e ""

	cd $1
	export PROC_DIR=`pwd`
	DEM=$2	
fi

TMP_DIR=${PROC_DIR}/TMP
mkdir -p ${TMP_DIR}
FINAL=$3
mkdir ${FINAL}


echo "--------------------------------------------------------------------------------------------------"
echo " Calculate second order statistic Texture measurements (GLCMMean, GLCMVariance) for HH channel"
echo "--------------------------------------------------------------------------------------------------"

# define path/name of output
INPUT_HH=${PROC_DIR}/Gamma0_HH_db.tif
INPUT_HV=${PROC_DIR}/Gamma0_HV_db.tif

OUTPUT_TEXTURE_HH=${TMP_DIR}/TEXTURE_HH.dim
OUTPUT_TEXTURE_HV=${TMP_DIR}/TEXTURE_HV.dim

# Write new xml graph and substitute input and output files
cp ${S1TBX_GRAPHS}/Generic_Texture.xml ${TMP_DIR}/TEXTURE_HH.xml
	
# insert Input file path into processing chain xml
sed -i "s|INPUT_TR|${INPUT_HH}|g" ${TMP_DIR}/TEXTURE_HH.xml
# insert Input file path into processing chain xml
sed -i "s|OUTPUT_TR|${OUTPUT_TEXTURE_HH}|g" ${TMP_DIR}/TEXTURE_HH.xml

echo "Calculate GLCM Texture measurements for HH channel"
sh ${S1TBX_EXE} ${TMP_DIR}/TEXTURE_HH.xml 2>&1 | tee  ${TMP_DIR}/tmplog

# in case it fails try a second time	
if grep -q Error ${TMP_DIR}/tmplog; then 	
	echo "2nd try"
	rm -rf ${TMP_DIR}/TEXTURE_HH.dim ${TMP_DIR}/TEXTURE_HH.data
	sh ${S1TBX_EXE} ${TMP_DIR}/TEXTURE_HH.xml
fi

echo "--------------------------------------------------------------------------------------------------"
echo " Calculate second order statistic Texture measurements (GLCMMean, GLCMVariance) for HV channel"
echo "--------------------------------------------------------------------------------------------------"

# Write new xml graph and substitute input and output files
cp ${S1TBX_GRAPHS}/Generic_Texture.xml ${TMP_DIR}/TEXTURE_HV.xml
	
# insert Input file path into processing chain xml
sed -i "s|INPUT_TR|${INPUT_HV}|g" ${TMP_DIR}/TEXTURE_HV.xml
# insert Input file path into processing chain xml
sed -i "s|OUTPUT_TR|${OUTPUT_TEXTURE_HV}|g" ${TMP_DIR}/TEXTURE_HV.xml

echo "Calculate GLCM Texture measurements for HV channel"
sh ${S1TBX_EXE} ${TMP_DIR}/TEXTURE_HV.xml 2>&1 | tee  ${TMP_DIR}/tmplog

# in case it fails try a second time	
if grep -q Error ${TMP_DIR}/tmplog; then 	
	echo "2nd try"
	rm -rf ${TMP_DIR}/TEXTURE_HV.dim ${TMP_DIR}/TEXTURE_HV.data
	sh ${S1TBX_EXE} ${TMP_DIR}/TEXTURE_HV.xml
fi

gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata -99999 -dstnodata 0 -tr 0.000277778 0.000277778 ${TMP_DIR}/TEXTURE_HH.data/band_1.img ${TMP_DIR}/1_Gamma0_HH.tif
# get the common area of DEM and outputfiles
XMIN=`osk_intersect_raster.py -a ${TMP_DIR}/1_Gamma0_HH.tif -b $DEM | awk -F ',' $'{print$1}' | cut -c 2-`
XMAX=`osk_intersect_raster.py -a ${TMP_DIR}/1_Gamma0_HH.tif -b $DEM | awk -F ',' $'{print$3}'`
YMAX=`osk_intersect_raster.py -a ${TMP_DIR}/1_Gamma0_HH.tif -b $DEM | awk -F ',' $'{print$2}'`
YMIN=`osk_intersect_raster.py -a ${TMP_DIR}/1_Gamma0_HH.tif -b $DEM | awk -F ',' $'{print$4}' | rev | cut -c 2-| rev`

gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${INPUT_HH} ${FINAL}/01_Gamma0_HH_db.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${INPUT_HV} ${FINAL}/02_Gamma0_HV_db.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${PROC_DIR}/HH_HV_ratio.tif ${FINAL}/03_HH_HV_lin_ratio.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${PROC_DIR}/HH_HV_db_ratio.tif ${FINAL}/04_HH_HV_db_ratio.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${TMP_DIR}/TEXTURE_HH.data/Homogeneity.img ${FINAL}/05_Homogeneity_HH.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${TMP_DIR}/TEXTURE_HH.data/GLCMVariance.img ${FINAL}/06_Variance_HH.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${TMP_DIR}/TEXTURE_HH.data/Dissimilarity.img ${FINAL}/07_Dissimilarity_HH.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${TMP_DIR}/TEXTURE_HV.data/Homogeneity.img ${FINAL}/08_Homogeneity_HV.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${TMP_DIR}/TEXTURE_HV.data/GLCMVariance.img ${FINAL}/09_Variance_HV.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -t_srs EPSG:4326 -srcnodata 0 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 ${TMP_DIR}/TEXTURE_HV.data/Dissimilarity.img ${FINAL}/10_Dissimilarity_HV.tif
gdalwarp -multi -wo NUM_THREADS=ALL_CPUS -of GTiff -ot Float32 -t_srs EPSG:4326 -srcnodata -99999 -dstnodata -9999 -te $XMIN $YMIN $XMAX $YMAX -tr 0.000277778 0.000277778 $DEM ${FINAL}/11_DEM_height.tif

# write world file (we will need for segmentation)
listgeo -tfw ${FINAL}/01_Gamma0_HH_db.tif
mv ${FINAL}/01_Gamma0_HH_db.tfw ${FINAL}/generic.tfw

# create slope and aspect layers
# mask for no data 
gdaldem slope -s 111120 ${FINAL}/11_DEM_height.tif ${FINAL}/12_DEM_slope.tif
gdaldem aspect ${FINAL}/11_DEM_height.tif ${FINAL}/13_DEM_aspect.tif

gdalbuildvrt -separate -srcnodata -9999 -vrtnodata -9999 ${FINAL}/stack.vrt ${FINAL}/*.tif
# remove temp files
rm -rf ${TMP_DIR}/ ${PROC_DIR}/target.d*

echo "----------------------------------"
echo " Processing succesfully finished"
echo "----------------------------------"
