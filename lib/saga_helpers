
#SAGA multidirectional filtering
function osk_md_filter() {
    if [ -z "$2" ]; then 
    echo "Missing arguments. Syntax:"
    echo "  osk_md_filter <input_file> <output_file> [GDAL-Format Output] [Absolute Noise] [Relative Noise] [Filter Method]"
    return
    fi
    
    if [ -z "$3" ]; then 
	GDAL_saga=GTiff
    else
	GDAL_saga=$3
    fi

    if [ -z "$4" ]; then 
	ABS_NOISE=5000
    else
	ABS_NOISE=$4
    fi

    if [ -z "$5" ]; then 
	REL_NOISE=3000
    else
	REL_NOISE=$5
    fi

    if [ -z "$6" ]; then 
	METHOD=1
    else
	METHOD=$6
    fi

    # use tmp directory for intermediate products
    SEC=`date +%s`
    TMP_DIR_saga=/tmp/process_saga${SEC}

    mkdir -p ${TMP_DIR_saga}

    # check input format
    IN_FORMAT=`gdal_format $1`
    IN_NODATA=`gdal_nodata $1`

    # do the filtering
    if [ "$IN_FORMAT" == "SAGA" ];then
	    FILE_BASE=`echo $1 | rev | cut -c 6- | rev`
            FILE_SAGA=`echo $FILE_BASE.sgrd`
	    saga_cmd -f=r grid_filter 3 -INPUT:$FILE_SAGA -RESULT:${TMP_DIR_saga}/tmp.saga.filtered.sgrd -NOISE_ABS:${ABS_NOISE} -NOISE_REL:${REL_NOISE} -METHOD:${METHOD}
    else
	    gdalwarp -srcnodata ${IN_NODATA} -dstnodata -99999 -of SAGA $1 ${TMP_DIR_saga}/tmp.saga.sdat
	    saga_cmd -f=r grid_filter 3 -INPUT:${TMP_DIR_saga}/tmp.saga.sgrd -RESULT:${TMP_DIR_saga}/tmp.saga.filtered.sgrd -NOISE_ABS:${ABS_NOISE} -NOISE_REL:${REL_NOISE} -METHOD:${METHOD}
    fi

    if [ ${GDAL_saga} == "SAGA" ];then

	gdalwarp -dstnodata -99999 -of ${GDAL_saga} ${TMP_DIR_saga}/tmp.saga.filtered.sdat $2

    else	
	
	gdalwarp -srcnodata -99999 -dstnodata 0 -of ${GDAL_saga} ${TMP_DIR_saga}/tmp.saga.filtered.sdat $2
    fi
rm -rf ${TMP_DIR_saga}
}

function osk_valid_range() {
	
	if [ -z "$6" ]; then 
	echo "Missing arguments. Syntax:"
	echo "osk_reclass_values <input_file> <output_file> <GDAL-Format Output> <Min> <Max> <Output NoData>"
	return
	fi

	GDAL_saga=$3
	# use tmp directory for intermediate products
   	SEC=`date +%s`
	TMP_DIR_saga=/tmp/process_saga${SEC}
	mkdir -p $TMP_DIR_saga
	# check input format
        IN_FORMAT=`gdal_format $1`
    	IN_NODATA=`gdal_nodata $1`

    	if [ "$IN_FORMAT" == "SAGA" ];then
		FILE_BASE=`echo $1 | rev | cut -c 6- | rev`
		FILE_SAGA=`echo $FILE_BASE.sgrd`

		saga_cmd grid_tools 15 -INPUT:$FILE_SAGA -RESULT:${TMP_DIR_saga}/tmp.saga.rerange1.sgrd -OLD:$4 -NEW:-99999 -NODATA:-99999 -SOPERATOR:1 -RESULT_NODATA_VALUE:-99999
		saga_cmd grid_tools 15 -INPUT:${TMP_DIR_saga}/tmp.saga.rerange1.sgrd -RESULT:${TMP_DIR_saga}/tmp.saga.rerange.sgrd -OLD:$5 -NEW:$5 -NODATA:-99999 -SOPERATOR:4 -RESULT_NODATA_VALUE:-99999


		
	else

		if [ -z "${IN_NODATA}" ];then
		    	gdalwarp -multi -srcnodata 0 -dstnodata "-99999" -of SAGA $1 ${TMP_DIR_saga}/tmp.saga.sdat
			echo "here"
			saga_cmd grid_tools 15 -INPUT:${TMP_DIR_saga}/tmp.saga.sgrd -RESULT:${TMP_DIR_saga}/tmp.saga.rerange1.sgrd -OLD:$4 -NEW:-99999 -NODATA:0 -SOPERATOR:1 -RESULT_NODATA_VALUE:-99999
		else
	    		gdalwarp -multi -srcnodata "${IN_NODATA}" -dstnodata "-99999" -of SAGA $1 ${TMP_DIR_saga}/tmp.saga.sdat
			echo "there"
		    	saga_cmd grid_tools 15 -INPUT:${TMP_DIR_saga}/tmp.saga.sgrd -RESULT:${TMP_DIR_saga}/tmp.saga.rerange1.sgrd -OLD:$4 -NEW:-99999 -NODATA:-99999 -SOPERATOR:1 -RESULT_NODATA_VALUE:-99999
		fi
		saga_cmd grid_tools 15 -INPUT:${TMP_DIR_saga}/tmp.saga.rerange1.sgrd -RESULT:${TMP_DIR_saga}/tmp.saga.rerange.sgrd -OLD:$5 -NEW:$5 -NODATA:-99999 -SOPERATOR:4 -RESULT_NODATA_VALUE:-99999
	fi

	
   	if [ ${GDAL_saga} == "SAGA" ];then

 		FILE_OUT_BASE=`echo $2 | rev | awk -F "." $'{$1="";print $0}' | cut -c 2- | rev| tr '\ ' '.'`

		mv ${TMP_DIR_saga}/tmp.saga.rerange.sdat $FILE_OUT_BASE.sdat
		mv ${TMP_DIR_saga}/tmp.saga.rerange.sgrd $FILE_OUT_BASE.sgrd
		mv ${TMP_DIR_saga}/tmp.saga.rerange.prj $FILE_OUT_BASE.prj
		mv ${TMP_DIR_saga}/tmp.saga.rerange.mgrd $FILE_OUT_BASE.mgrd

    	else	

		gdalwarp -multi -srcnodata -99999 -dstnodata 0 -of ${GDAL_saga} ${TMP_DIR_saga}/tmp.saga.rerange.sdat $2
    	fi

	rm -rf ${TMP_DIR_saga}

}
