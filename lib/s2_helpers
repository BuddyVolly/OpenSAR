#! /bin/bash

# The MIT License (MIT)
# Copyright (c) 2016 Andreas Vollrath

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal 
# in the Software without restriction, including without limitation the rights 
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#get the orbit directions
function s2_orbit_dir() {
    if [ -z "$1" ]; then 
    echo "Missing arguments. Syntax:"
    echo "  s1_orbit <input_list>"
    return
    fi
    ORBIT=$(xml_grep str $1 |\
          grep orbitdirection |\
	  sed 's/  <str name="orbitdirection">//g' |\
	  sed 's|</str>||g')
    echo "$ORBIT"
}


# get Scene ID
function s2_ident() {
    if [ -z "$1" ]; then 
    echo "Missing arguments. Syntax:"
    echo "  s1_ident <input_list>"
    return
    fi
    IDENT=$(xml_grep str $1 |\
	grep \"identifier |\
	sed 's/  <str name="identifier">//g' |\
	sed 's|</str>||g')
    echo "$IDENT"
}

# get UUID for download
function s2_uuid() {
    if [ -z "$1" ]; then 
    echo "Missing arguments. Syntax:"
    echo "  s1_uuid <input_list>"
    return
    fi
    UUID=$(xml_grep id $1 --text_only |\
	tail -n +2)
    echo "$UUID"
}

# get acquisition date
function s2_date() {
    if [ -z "$1" ]; then 
    echo "Missing arguments. Syntax:"
    echo "  s1_date <input_list>"
    return
    fi
    DATE=$(xml_grep title $1 --text_only |\
 	tail -n +2 |\
	cut -c 26-33)
    echo "$DATE"
}

# get scene footprint
function s2_footprint() {
    if [ -z "$1" ]; then 
    echo "Missing arguments. Syntax:"
    echo "  s1_footprint <input_list>"
    return
    fi
    FOOT=$(xml_grep str $1 --text_only |\
	 grep "POLYGON ((" |\
	 sed 's|POLY|\"POLY|g' |\
	 sed 's|))|))"|g')
    echo "$FOOT"
}

# get track
function s2_track() {
    if [ -z "$1" ]; then 
    echo "Missing arguments. Syntax:"
    echo "  s1_track <input_list>"
    return
    fi
    TRACK=$(xml_grep title $1 --text_only |\
 	tail -n +2 |\
	cut -c 34-37)
    echo "$TRACK"
}

# get cloud cover
function s2_cloud() {
    if [ -z "$1" ]; then 
    echo "Missing arguments. Syntax:"
    echo "  s1_cloud <input_list>"
    return
    fi
    CLOUD=$(xml_grep double $1 |\
    grep cloudcover |\
    sed 's/  <double name="cloudcoverpercentage">//g' |\
    sed 's|</double>||g')
    echo "$CLOUD"
}

